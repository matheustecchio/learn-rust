{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `licensing_info`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"Generic Types, Traits, and Lifetime/Traits/License It/src/lib.rs","byte_start":184,"byte_end":214,"line_start":13,"line_end":13,"column_start":1,"column_end":31,"is_primary":true,"text":[{"text":"impl Licensed for SomeSoftware {} // Don't edit this line","highlight_start":1,"highlight_end":31}],"label":"missing `licensing_info` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"Generic Types, Traits, and Lifetime/Traits/License It/src/lib.rs","byte_start":25,"byte_end":60,"line_start":2,"line_end":2,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn licensing_info(&self) -> String;","highlight_start":5,"highlight_end":40}],"label":"`licensing_info` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn licensing_info(&self) -> String { todo!() }`","code":null,"level":"help","spans":[{"file_name":"Generic Types, Traits, and Lifetime/Traits/License It/src/lib.rs","byte_start":216,"byte_end":216,"line_start":13,"line_end":13,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"impl Licensed for SomeSoftware {} // Don't edit this line","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":"fn licensing_info(&self) -> String { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `licensing_info`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mGeneric Types, Traits, and Lifetime/Traits/License It/src/lib.rs:13:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn licensing_info(&self) -> String;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`licensing_info` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Licensed for SomeSoftware {} // Don't edit this line\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `licensing_info` in implementation\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `licensing_info`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"Generic Types, Traits, and Lifetime/Traits/License It/src/lib.rs","byte_start":242,"byte_end":273,"line_start":14,"line_end":14,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"impl Licensed for OtherSoftware {} // Don't edit this line","highlight_start":1,"highlight_end":32}],"label":"missing `licensing_info` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"Generic Types, Traits, and Lifetime/Traits/License It/src/lib.rs","byte_start":25,"byte_end":60,"line_start":2,"line_end":2,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn licensing_info(&self) -> String;","highlight_start":5,"highlight_end":40}],"label":"`licensing_info` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn licensing_info(&self) -> String { todo!() }`","code":null,"level":"help","spans":[{"file_name":"Generic Types, Traits, and Lifetime/Traits/License It/src/lib.rs","byte_start":275,"byte_end":275,"line_start":14,"line_end":14,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"impl Licensed for OtherSoftware {} // Don't edit this line","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"fn licensing_info(&self) -> String { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `licensing_info`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mGeneric Types, Traits, and Lifetime/Traits/License It/src/lib.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn licensing_info(&self) -> String;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`licensing_info` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Licensed for OtherSoftware {} // Don't edit this line\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `licensing_info` in implementation\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0046`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0046`.\u001b[0m\n"}
